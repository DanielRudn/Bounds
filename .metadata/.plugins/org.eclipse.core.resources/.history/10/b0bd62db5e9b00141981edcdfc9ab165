package com.dr.bounds.maps;

import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.math.Intersector;
import com.badlogic.gdx.math.Rectangle;
import com.dr.bounds.Player;

public class SpikeMapType extends MapType{

	private Rectangle useless = new Rectangle();
	
	public SpikeMapType(int type, Player player, MapGenerator generator) {
		super(type, player, generator, new Texture("FALLING_BG"));
		this.typeName = "SPIKES";
		Texture spike = new Texture("spike.png");
		for(int x = 0; x < 8; x++)
		{
			this.getObstacles().add(new dSpikeObstacle(0,0,spike, player));
		}
	}

	@Override
	public void update(float delta) {
		super.update(delta);
		for(int x = 0; x < obstacles.size(); x++)
		{
			obstacles.get(x).update(delta);
			if(obstacles.get(x).shouldRegenerate())
			{
				generate(x);
				obstacles.get(x).setRegenerate(false);
			}
			// check if player had collision
			if(gen.hadCollision() == false && Intersector.intersectRectangles(player.getBoundingRectangle(), obstacles.get(x).getBoundingRectangle(), useless)) // FIX
			{
				//obstacles.get(x).setColor(Color.BLUE);
				gen.setHadCollision(true);
				// send message to opponent saying player lost
				//MainGame.requestHandler.sendReliableMessage(new byte[]{'L'});
				// test might have to remove
				break;
			}
		}
	}
}
