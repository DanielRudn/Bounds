package com.dr.bounds.maps.maptypes;

import com.badlogic.gdx.graphics.Color;
import com.dr.bounds.AssetManager;
import com.dr.bounds.MainGame;
import com.dr.bounds.Player;
import com.dr.bounds.maps.obstacles.BirdObstacle;
import com.dr.bounds.maps.obstacles.ForestObstacle;

public class ForestMapType extends MapType {

	public ForestMapType(int type, Player player, MapGenerator generator) {
		super(type, player, generator, AssetManager.getBackground("SPACE_BG.png"));
		bgColor = new Color(38f/256f, 194f/256f, 129f/256f, 1f);
		typeName = "Forest";
		gen.setScoreIncrementAmount(1);
		
		// make 8 obstacles
		for(int x = 0; x < 8; x++)
		{
			obstacles.add(new ForestObstacle(0,0, AssetManager.getTexture("circle.png"), player));
			obstacles.get(x).setRegenerate(false);
		}
	}
	
	@Override
	protected void generateBlock(int index)
	{
		// get direction, 0 = east, 1 = west
		int direction = MapGenerator.rng.nextInt(2);
		if(direction == 0)
		{
			((BirdObstacle)obstacles.get(index)).setDirection(true);
			obstacles.get(index).setX(-obstacles.get(index).getWidth());
		}
		else if(direction == 1)
		{
			((BirdObstacle)obstacles.get(index)).setDirection(false);
			obstacles.get(index).setX(MainGame.VIRTUAL_WIDTH + obstacles.get(index).getWidth());
		}
		int dimensions = MIN_WIDTH + MapGenerator.rng.nextInt(64); // TODO: change maybe? put in a final variable
		obstacles.get(index).setDimensions((float)dimensions*1.25f, dimensions);
		obstacles.get(index).setY(obstacles.get(getPreviousIndex(index)).getY() - MIN_DISTANCE - MapGenerator.rng.nextInt(MAX_DISTANCE));
	}

}
