package com.dr.bounds.screens;

import java.util.ArrayList;

import com.DR.dLib.dScreen;
import com.DR.dLib.dText;
import com.DR.dLib.dUICard;
import com.DR.dLib.dUICardList;
import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.Texture.TextureFilter;
import com.dr.bounds.MainGame;
import com.dr.bounds.ui.LoadingIcon;

public class InboxScreen extends dUICardList {
	
	// title card at the top
	private dUICard titleCard;
	// loading icon to show while invitations load
	private LoadingIcon loadingIcon;

	public InboxScreen(float x, float y, Texture texture, ArrayList<dUICard> list) {
		super(x, y, texture, list);
		setColor(new Color(26f/256f, 188f/256f, 156f/256f, 1f));
		
		titleCard = new dUICard(0,0,texture);
		titleCard.setDimensions(getWidth(), 92f);
		titleCard.setHasShadow(false);
		titleCard.setColor(new Color(22f/256f, 160f/256f, 133f/256f,1f));
		dText titleText = new dText(0,0,64f,"INBOX");
		titleText.setColor(Color.WHITE);
		titleCard.addObject(titleText, dUICard.CENTER, dUICard.CENTER);
		setTitleCard(titleCard);
		
		
		Texture circle = new Texture("circle.png");
		circle.setFilter(TextureFilter.Linear, TextureFilter.Linear);
		
		loadingIcon = new LoadingIcon(getWidth()/2f - circle.getWidth() / 2f,getHeight()/2f - circle.getHeight() / 2f,circle);
	}

	@Override
	public void goBack() {
		if(MainGame.previousScreen != null)
		{
			switchScreen(MainGame.previousScreen);
		}
	}

	@Override
	public void switchScreen(dScreen newScreen) {
		this.hide();
		newScreen.show();
		MainGame.currentScreen = newScreen;
		MainGame.previousScreen = this;
	}

}
